version: 2

models:
  - name: model_a
    meta:
      fal:
        pre-hook:
          - pre_hook_1.py
          - path: pre_hook_2.py
          - path: add.py
            with:
              left: 2
              right: 3

        post-hook:
          - post_hook_1.py
          - path: post_hook_2.py
          - path: sub.py
            with:
              left: 5
              right: 2
          - path: types.py
            with:
              number: 5
              text: "type"
              sequence:
                - 1
                - 2
                - 3
              mapping:
                key: value

  # Hook with environment overrides
  - name: model_b
    meta:
      fal:
        pre-hook:
          - path: local_hook.py
          - path: funny_hook.py
            environment: funny
        post-hook:
          - path: check_imports.py
            environment: not-funny
            with:
              import: pyjokes
              expected_success: false

  # A regular DBT model on a new environment
  - name: model_c
    meta:
      fal:
        environment: pyjokes-0.6.0
        post-hook:
          - path: check_imports.py
            with:
              import: pyjokes
              expected_success: true

  # A Python model on an environment w/pyjokes==0.5.0
  - name: model_d
    meta:
      fal:
        environment: pyjokes-0.5.0
        post-hook:
          - path: check_imports.py
            with:
              import: pyjokes
              expected_success: true

  # A Python model on an environment w/pyjokes==0.6.0
  - name: model_e
    meta:
      fal:
        environment: pyjokes-0.6.0
        pre-hook:
          # We override the default environment here
          # for only this hook, and expect the import
          # of pyjokes to fail under 'not-funny' environment.
          - path: check_imports.py
            environment: not-funny
            with:
              import: pyjokes
              expected_success: false

          # But all other hooks should still be able to
          # access to the model's environment
          - joke_version.py

          # And they can even customize the version
          # with another overwrite
          - path: funny_hook.py
            environment: pyjokes-0.5.0

  # A node-scoped environment with local hooks
  - name: model_f
    meta:
      fal:
        environment: not-funny
        pre-hook:
          - path: environment_type.py
            environment: local

        post-hook:
          - path: environment_type_2.py
            environment: local

          - path: environment_type_3.py

  - name: model_g
    meta:
      fal:
        environment: funny-conda
        pre-hook:
          - path: environment_type.py

          - path: environment_type_2.py
            environment: funny

          - path: environment_type_3.py
            environment: local

        post-hook:
          - path: check_imports.py
            with:
              import: pyjokes
              expected_success: true
              version: "0.6.0"
