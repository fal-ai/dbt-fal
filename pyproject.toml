[tool.poetry]
name = "fal"
version = "0.7.5-alpha.0"
description = "fal allows you to run python scripts directly from your dbt project."
homepage = "https://github.com/fal-ai/fal"
documentation = "https://docs.fal.ai"
repository = "https://github.com/fal-ai/fal"
readme = "README.md"
authors = [ "Features & Labels <hello@fal.ai>" ]
packages = [
    { include = "fal", from = "src" },
    { include = "faldbt", from = "src" },
    { include = "_fal_testing", from = "tests" }
]

keywords = [ "dbt", "pandas" ]
classifiers = [
    "Development Status :: 4 - Beta"
]

[tool.poetry.dependencies]
python = ">=3.7.2, <3.11"
pandas = "^1.3.4"
pyarrow = "^6.0.1"
PyYAML = "^6.0"
agate-sql = "^0.5.8"
requests = "^2.27.1"
posthog = "^1.4.5"
astor = "^0.8.1"
deprecation = "^2.1.0"
"backports.functools_lru_cache" = "^1.6.4"

# Environment management related dependencies
platformdirs = "^2.5.2"
virtualenv = "^20.16.2"
dill = "^0.3.5.1, <0.3.6"
importlib-metadata = "^4.12.0"

# TODO: review any of these are bigquery-specific or for firebase
google-cloud-bigquery = "^2.28.1"
google-cloud-bigquery-storage = "^2.9.1"
firebase-admin = "^5.1.0"

# Adapters

## snowflake
snowflake-connector-python = { version = "2.7.9", optional = true } # 2.7.10 needs pyarrow 8

## redshift
sqlalchemy-redshift = { version = "^0.8.9", optional = true }

## duckdb
duckdb-engine = { version = "^0.1.8", optional = true }

## dev
pytest = { version = "^5.2", optional = true }
black = { version = "^22.3", optional = true }
behave = { version = "^1.2.6", optional = true }
mock = { version = "^4.0.3", optional = true }
pytest-mock = { version = "^3.7.0", optional = true }
matplotlib = { version = "^3.5.2", optional = true }

[tool.poetry.extras]
postgres = []
snowflake = ["snowflake-connector-python"]
bigquery = []
redshift = ["sqlalchemy-redshift"]
duckdb = ["duckdb-engine"]
athena = []
test = [
    "pytest",
    "black",
    "behave",
    "mock",
    "pytest-mock",
]
dev = [
    "matplotlib"
]

[tool.poetry.dev-dependencies]
pytest = { version = "^5.2", optional = true }
black = { version = "^22.3", optional = true }
behave = { version = "^1.2.6", optional = true }
mock = { version = "^4.0.3", optional = true }
pytest-mock = { version = "^3.7.0", optional = true }
matplotlib = { version = "^3.5.2", optional = true }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
fal = "fal.cli:cli"
