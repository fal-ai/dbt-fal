name: "Setup local fal installation"
description: "Installs local fal installing wheel from Poetry build"

inputs:
  python:
    required: true
    description: "Python version"
  dbt:
    required: false
    default: "latest"
    description: "dbt version"
  adapter:
    required: true
    description: "dbt adapter"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ inputs.python }}

    - name: Install poetry
      shell: bash
      run: pip install poetry-core=="1.0.*" poetry=="1.1.4"

    - name: Install dbt
      shell: bash
      run: |
        package=dbt-${{ inputs.adapter }}
        # overwrite for specific adapters
        if [[ '${{ inputs.adapter }}' == 'athena' ]]
        then
          package=dbt-athena-adapter
        fi

        if [[ '${{ inputs.dbt }}' == 'latest' ]]
        then
          version='*'
          pip install ${package}
        elif [[ '${{ inputs.dbt }}' =~ ^1.*$ ]]
        then
          version='${{ inputs.dbt }}'
        else
          echo "Invalid dbt version to install"
          exit 2
        fi

        echo "${package}==${version}"
        pip install ${package}==${version}
        if [[ '${{ inputs.adapter }}' == 'fal' ]]
        then
          pip install dbt-postgres==${version}
        fi

    - name: Install fal
      shell: sh
      run: |
        if [[ '${{ inputs.adapter }}' == 'fal' ]]
        then
          pip install -e './projects/fal[postgres]'
        else
          pip install -e './projects/fal[${{ inputs.adapter }}]'
        fi

    - name: List requirements.txt
      shell: sh
      run: pip freeze
