name: Run Integration Tests on Different Profiles

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ["3.8.x"]
        dbt: ["1.0.4"]
        profile: ["bigquery", "snowflake", "redshift"]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.4"

      - name: Fix jinja
        run: |
          pip install markupsafe==2.0.1

      - name: Install fal
        run: |
          poetry build
          pip install dist/fal-0.1.0-py3-none-any.whl

      - name: Install dbt
        run: |
          pip install dbt-${{ matrix.profile }}

      - name: Setup environment
        working-directory: integration_tests
        run: |
          if [[ '${{ matrix.profile }}' == "redshift" ]]
          then
            docker-compose up -d
          fi

      - name: Install dependencies
        working-directory: integration_tests
        run: |
          pip install behave
          (test -f requirements.txt && pip install -r requirements.txt) || echo "No requirements.txt"

      - name: Run dbt and fal
        working-directory: integration_tests
        env:
          FAL_STATS_ENABLED: false
          KEYFILE: ${{ secrets.GCP_SA_KEY }}
          GCLOUD_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
          BQ_DATASET: ${{ secrets.BQ_DATASET }}
          RS_DB_NAME: ${{ secrets.RS_DB_NAME }}
          RS_HOST: ${{ secrets.RS_HOST }}
          RS_PASSWORD: ${{ secrets.RS_PASSWORD }}
          RS_PORT: ${{ secrets.RS_PORT }}
          RS_USER: ${{ secrets.RS_USER }}
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USER: ${{ secrets.SF_USER }}
          SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_SCHEMA: ${{ secrets.SF_SCHEMA }}
        run: |
          if [[ '${{ matrix.profile }}' == "bigquery" ]]
          then
            echo $KEYFILE > $HOME/keyfile.json
            ls -la $HOME/keyfile.json
            export KEYFILE_DIR=$HOME
            echo 'keyfile is ready'
          fi
          behave -D profile=${{ matrix.profile }}
