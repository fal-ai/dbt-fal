# This workflow will update the latest version with minor release and upload a package to PyPi

name: PyPI Release

on:
  push:
    branches: [release]
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: false
        default: patch
        type: choice
        options:
          - patch
          - minor

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.4"

      - name: Build package
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USER }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          VERSION_TYPE="patch"
          if [[ '${{ github.event_name }}' == 'workflow_dispatch' ]]
          then
            VERSION_TYPE="${{ github.event.inputs.version }}""
          fi

          poetry version $VERSION_TYPE
          current_version=$(poetry version -s)
          prev_version_tag=$(git describe --tags --abbrev=0)
          echo "prev_version_tag=$prev_version_tag" >> $GITHUB_ENV
          echo "current_version=$current_version" >> $GITHUB_ENV
          poetry build

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: v${{ env.prev_version_tag }}..HEAD
        env:
          OUTPUT: CHANGES.md

      - name: Set the release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="${r//'%'/'%25'}"     # Multiline escape sequences for %
          r="${r//$'\n'/'%0A'}"   # Multiline escape sequences for '\n'
          r="${r//$'\r'/'%0D'}"   # Multiline escape sequences for '\r'
          echo "::set-output name=RELEASE_BODY::$r"

      - name: Publish GitHub
        uses: softprops/action-gh-release@v1
        with:
          name: fal ${{ env.current_version }}
          body: ${{ steps.release.outputs.RELEASE_BODY }}
          tag_name: v${{ env.current_version }}
          files: |
            dist/fal-${{env.current_version}}-py3-none-any.whl
            dist/fal-${{env.current_version}}.tar.gz

      - name: Publish PyPI
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USER }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD -v -n

      - name: Bump repo version
        run: |
          git clean -fxd # Clear all the changes
          poetry version ${{env.current_version}}
          poetry version prepatch

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          delete-branch: true
          title: Bump the pyproject.toml version
          base: main
          token: ${{ secrets.RELEASER_GITHUB_PAT }}
