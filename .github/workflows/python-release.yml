# This workflow will update the latest version with minor release and upload a package to PyPi

name: PyPI Release

on:
  workflow_dispatch:
    inputs:
      package:
        description: Package
        required: false
        default: fal
        type: choice
        options:
          - fal
          - dbt-fal
      version:
        description: Version
        required: false
        default: patch
        type: choice
        options:
          - patch
          - minor
      publish_from_any_branch:
        description: Publish from any branch
        required: false
        default: false
        type: boolean
      next_version:
        description: Next version
        required: false
        default: prepatch
        type: string

jobs:
  deploy:
    # Run only for `release` branch or if marked as acceptable
    if: github.ref == 'refs/heads/release' || inputs.publish_from_any_branch

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Package setup
        run: |
          if [[ ${{ inputs.package }} == fal ]]
          then
            "PACKAGE_DIR=." >> $GITHUB_ENV
            "TAG_PREFIX=v" >> $GITHUB_ENV
          else if [[ ${{ inputs.package }} == dbt-fal ]]
            "PACKAGE_DIR=adapter" >> $GITHUB_ENV
            "TAG_PREFIX=adapter-v" >> $GITHUB_ENV
          fi

      - name: Install poetry
        shell: bash
        run: pip install poetry-core=="1.0.*" poetry=="1.1.4"

      - name: Build package
        working-directory: ${{ env.PACKAGE_DIR }}
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USER }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          VERSION_TYPE="${{ inputs.version }}"

          poetry version $VERSION_TYPE

          # version has format '0.4.1'
          current_version=$(poetry version -s)
          echo "current_version=$current_version" >> $GITHUB_ENV

          # tag has format 'v0.4.0' (note the 'v')
          prev_version_tag=$(git describe --tags --match '${{ env.TAG_PREFIX }}0.*' --abbrev=0)
          echo "prev_version_tag=$prev_version_tag" >> $GITHUB_ENV

          poetry build

      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: ${{ env.PACKAGE_DIR }}/cliff.toml
          args: ${{ env.prev_version_tag }}..${{ github.ref }}
        env:
          OUTPUT: CHANGES.md

      - name: Set the release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="${r//'%'/'%25'}"     # Multiline escape sequences for %
          r="${r//$'\n'/'%0A'}"   # Multiline escape sequences for '\n'
          r="${r//$'\r'/'%0D'}"   # Multiline escape sequences for '\r'
          echo "::set-output name=RELEASE_BODY::$r"

      - name: Publish GitHub
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ inputs.package }} ${{ env.current_version }}
          body: ${{ steps.release.outputs.RELEASE_BODY }}
          tag_name: ${{ env.TAG_PREFIX }}${{ env.current_version }}
          files: |
            ${{ env.PACKAGE_DIR }}/dist/${{ inputs.package }}-${{ env.current_version }}-py3-none-any.whl
            ${{ env.PACKAGE_DIR }}/dist/${{ inputs.package }}-${{ env.current_version }}.tar.gz

      - name: Publish PyPI
        working-directory: ${{ env.PACKAGE_DIR }}
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USER }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD -v -n

      - name: Bump repo version
        working-directory: ${{ env.PACKAGE_DIR }}
        run: |
          git clean -fxd # Clear all the changes
          poetry version ${{ env.current_version }}
          poetry version ${{ inputs.next_version }}

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          delete-branch: true
          title: Bump the pyproject.toml version
          base: main
          token: ${{ secrets.RELEASER_GITHUB_PAT }}
