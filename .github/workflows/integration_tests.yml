name: Run Integration Tests

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      python_versions:
        required: true
        type: string
      dbt_versions:
        required: true
        type: string
      dbt_adapter:
        required: true
        type: string

      dbt_profile_database:
        required: false
        type: string
      dbt_profile_schema:
        required: false
        type: string

      docker_db:
        required: false
        default: false
        type: boolean
    secrets:
      env_vars:
        required: false
        description: One liner to set adapter environment variables. (e.g. 'HOST=some SCHEMA=other')
      bigquery_keyfile:
        required: false

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: ${{fromJson(inputs.python_versions)}}
        dbt: ${{fromJson(inputs.dbt_versions)}}

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.4"

      # TODO: check if still necessary
      - name: Fix jinja
        run: |
          pip install markupsafe==2.0.1

      - name: Install fal
        run: |
          poetry build
          pip install dist/fal-0.1.0-py3-none-any.whl

      - name: Install dbt
        run: |
          if [[ '${{ matrix.dbt }}' =~ ^0.*$ ]]
          then
            pip install dbt==${{ matrix.dbt }}
            pip install dbt-${{ inputs.dbt_adapter }}==${{ matrix.dbt }}
          elif [[ '${{ matrix.dbt }}' =~ ^1.*$ ]]
          then
            pip install dbt-${{ inputs.dbt_adapter }}==${{ matrix.dbt }}
          else
            pip install dbt-${{ inputs.dbt_adapter }}
          fi

      - name: Start test Docker database
        working-directory: integration_tests
        if: inputs.docker_db
        run: docker-compose up -d

      - name: Install test dependencies
        working-directory: integration_tests
        run: |
          pip install behave

      - name: Run tests
        working-directory: integration_tests
        env:
          FAL_STATS_ENABLED: false
          DBT_DATABASE: inputs.dbt_profile_database
          DBT_SCHEMA: inputs.dbt_profile_schema
        run: |
          export ${{ secrets.env_vars }}
          if [ ! -z "$KEYFILE" ]
            echo "$KEYFILE" > $HOME/keyfile.json
            export KEYFILE_DIR=$HOME
          fi

          export DBT_DATABASE=${{ inputs.dbt_profile_database }}
          export DBT_SCHEMA=${{ inputs.dbt_profile_schema }}
          behave --tags=-broken_profile -D profile=${{ inputs.dbt_adapter }}

      - name: Send custom JSON data to Slack workflow
        if: failure()
        id: slack
        uses: slackapi/slack-github-action@v1.18.0
        with:
          # For posting a rich message using Block Kit
          payload: |
            {
              "text": "Integration tests failed for ${{ inputs.dbt_adapter }}, Python version ${{ matrix.python }}. https://github.com/fal-ai/fal/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
